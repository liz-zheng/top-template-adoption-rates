{"ast":null,"code":"var _jsxFileName = \"/Users/lizzybear/adoption-rate-component/src/PercentCircle.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PercentCircle = ({\n  title,\n  percentage,\n  size,\n  strokeWidth,\n  titleColor,\n  circleColor,\n  textColor\n}) => {\n  // Calculate the radius of the circle\n  const radius = (size - strokeWidth) / 2;\n\n  // Calculate the circumference of the circle\n  const circumference = 2 * Math.PI * radius;\n\n  // Calculate the stroke dash offset to show the correct percentage\n  const strokeDashoffset = circumference - percentage / 100 * circumference;\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: size,\n    height: size,\n    viewBox: `0 0 ${size} ${size}`,\n    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: size / 2,\n      cy: size / 2,\n      r: radius,\n      fill: \"transparent\",\n      stroke: circleColor,\n      strokeWidth: strokeWidth,\n      strokeDasharray: circumference,\n      strokeDashoffset: strokeDashoffset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), title && /*#__PURE__*/_jsxDEV(\"text\", {\n      fill: titleColor,\n      fontSize: size / 4,\n      children: [\" \", title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: \"50%\",\n      y: \"50%\",\n      textAnchor: \"middle\",\n      fill: textColor,\n      fontSize: size / 4,\n      fontWeight: \"bold\",\n      children: [\"test\", percentage, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = PercentCircle;\nexport default PercentCircle;\nvar _c;\n$RefreshReg$(_c, \"PercentCircle\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PercentCircle","title","percentage","size","strokeWidth","titleColor","circleColor","textColor","radius","circumference","Math","PI","strokeDashoffset","width","height","viewBox","children","cx","cy","r","fill","stroke","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","x","y","textAnchor","fontWeight","_c","$RefreshReg$"],"sources":["/Users/lizzybear/adoption-rate-component/src/PercentCircle.tsx"],"sourcesContent":["import React from 'react';\n\ninterface PercentCircleProps {\n  title: string;\n  percentage: number;\n  size: number;\n  strokeWidth: number; \n  titleColor: string; \n  circleColor: string; \n  textColor: string; \n}\n\nconst PercentCircle: React.FC<PercentCircleProps> = ({\n  title,\n  percentage,\n  size,\n  strokeWidth,\n  titleColor,\n  circleColor,\n  textColor,\n}) => {\n  // Calculate the radius of the circle\n  const radius = (size - strokeWidth) / 2;\n  \n  // Calculate the circumference of the circle\n  const circumference = 2 * Math.PI * radius;\n\n  // Calculate the stroke dash offset to show the correct percentage\n  const strokeDashoffset = circumference - (percentage / 100) * circumference;\n\n  return (\n    <svg width={size} height={size} viewBox={`0 0 ${size} ${size}`}>\n      <circle\n        cx={size / 2}\n        cy={size / 2}\n        r={radius}\n        fill=\"transparent\"\n        stroke={circleColor}\n        strokeWidth={strokeWidth}\n        strokeDasharray={circumference}\n        strokeDashoffset={strokeDashoffset}\n      />\n      { title && <text fill={titleColor} fontSize={size/4}> {title} </text>}\n      <text\n        x=\"50%\"\n        y=\"50%\"\n        textAnchor=\"middle\"\n        fill={textColor}\n        fontSize={size / 4}\n        fontWeight=\"bold\"\n      >\n        test\n        {percentage}%\n      </text>\n    </svg>\n  );\n};\n\nexport default PercentCircle;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY1B,MAAMC,aAA2C,GAAGA,CAAC;EACnDC,KAAK;EACLC,UAAU;EACVC,IAAI;EACJC,WAAW;EACXC,UAAU;EACVC,WAAW;EACXC;AACF,CAAC,KAAK;EACJ;EACA,MAAMC,MAAM,GAAG,CAACL,IAAI,GAAGC,WAAW,IAAI,CAAC;;EAEvC;EACA,MAAMK,aAAa,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGH,MAAM;;EAE1C;EACA,MAAMI,gBAAgB,GAAGH,aAAa,GAAIP,UAAU,GAAG,GAAG,GAAIO,aAAa;EAE3E,oBACEV,OAAA;IAAKc,KAAK,EAAEV,IAAK;IAACW,MAAM,EAAEX,IAAK;IAACY,OAAO,EAAG,OAAMZ,IAAK,IAAGA,IAAK,EAAE;IAAAa,QAAA,gBAC7DjB,OAAA;MACEkB,EAAE,EAAEd,IAAI,GAAG,CAAE;MACbe,EAAE,EAAEf,IAAI,GAAG,CAAE;MACbgB,CAAC,EAAEX,MAAO;MACVY,IAAI,EAAC,aAAa;MAClBC,MAAM,EAAEf,WAAY;MACpBF,WAAW,EAAEA,WAAY;MACzBkB,eAAe,EAAEb,aAAc;MAC/BG,gBAAgB,EAAEA;IAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EACAzB,KAAK,iBAAIF,OAAA;MAAMqB,IAAI,EAAEf,UAAW;MAACsB,QAAQ,EAAExB,IAAI,GAAC,CAAE;MAAAa,QAAA,GAAC,GAAC,EAACf,KAAK,EAAC,GAAC;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrE3B,OAAA;MACE6B,CAAC,EAAC,KAAK;MACPC,CAAC,EAAC,KAAK;MACPC,UAAU,EAAC,QAAQ;MACnBV,IAAI,EAAEb,SAAU;MAChBoB,QAAQ,EAAExB,IAAI,GAAG,CAAE;MACnB4B,UAAU,EAAC,MAAM;MAAAf,QAAA,GAClB,MAEC,EAACd,UAAU,EAAC,GACd;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACM,EAAA,GA5CIhC,aAA2C;AA8CjD,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}