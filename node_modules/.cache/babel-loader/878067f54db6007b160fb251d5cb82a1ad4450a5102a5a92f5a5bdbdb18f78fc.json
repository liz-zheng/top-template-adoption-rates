{"ast":null,"code":"var _jsxFileName = \"/Users/lizzybear/adoption-rate-component/src/TopAdoptionRates.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TopAdoptionRates.scss';\nimport PercentCircle from './PercentCircle';\nimport DynamicGrid from './DynamicGrid';\nimport TextDisplay from './TextDisplay';\nimport './_variables.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopAdoptionRates() {\n  _s2();\n  var _s = $RefreshSig$();\n  // sample data\n  const gridData = [{\n    'Template': 'fly-docker-image',\n    'Adoption Rate': '80%',\n    'Total Users': '200',\n    'Adopted count': '160',\n    'Growth Rate': '5%'\n  }, {\n    'Template': 'Develop in Docker',\n    'Adoption Rate': '50%',\n    'Total Users': '200',\n    'Adopted count': '100',\n    'Growth Rate': '65%'\n  }, {\n    'Template': 'Develop in Docker-2',\n    'Adoption Rate': '30%',\n    'Total Users': '200',\n    'Adopted count': '60',\n    'Growth Rate': '5%'\n  }];\n\n  // sort data in descending order (highest first)\n  const sortByHighestAdoptionRate = data => {\n    return data.sort((a, b) => {\n      // Parse the Adoption Rate percentage and remove the '%' sign\n      const adoptionRateA = parseFloat(a['Adoption Rate'].replace('%', ''));\n      const adoptionRateB = parseFloat(b['Adoption Rate'].replace('%', ''));\n      return adoptionRateB - adoptionRateA;\n    });\n  };\n  const useDataFromApi = apiUrl => {\n    _s();\n    const [data, setData] = useState([]);\n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const response = await fetch(apiUrl);\n          if (response.ok) {\n            const jsonData = await response.json();\n            setData(jsonData);\n          } else {\n            // If API call fails, use sample data as fallback\n            setData(gridData);\n          }\n        } catch (error) {\n          // If API call fails, use sample data as fallback\n          setData(gridData);\n        }\n      };\n      fetchData();\n    }, [apiUrl]);\n    return data;\n  };\n  _s(useDataFromApi, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n  const getHighestAdoptionRate = data => {\n    const sortedData = sortByHighestAdoptionRate(data);\n    if (sortedData.length > 0) {\n      // Return the first object in the sorted array (highest adoption rate)\n      return sortedData[0];\n    }\n    return 'No Data';\n  };\n  const [data, setData] = useState(gridData);\n  const [topAdoptionRate, setTopAdoptionRate] = useState(getHighestAdoptionRate(data));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top-adoption-rates\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Top Template Adoption Rates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-adoption-percent\",\n      children: [/*#__PURE__*/_jsxDEV(PercentCircle, {\n        title: \"Adoption Rate\",\n        titleColor: '#b4bfd5',\n        percentage: topAdoptionRate,\n        size: 150,\n        strokeWidth: 10,\n        circleColor: \"#305bf5\",\n        textColor: \"#fff\",\n        emptyColor: \"#1d2435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextDisplay, {\n        title: \"Most Adopted Template\",\n        textContent: \"fly-docker-imagea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DynamicGrid, {\n        data: gridData,\n        hasHeaders: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DynamicGrid, {\n      data: gridData,\n      hasHeaders: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s2(TopAdoptionRates, \"dfK0T5oBRTPg+wjK80B4Oxu75A0=\");\n_c = TopAdoptionRates;\nexport default TopAdoptionRates;\nvar _c;\n$RefreshReg$(_c, \"TopAdoptionRates\");","map":{"version":3,"names":["React","useState","useEffect","PercentCircle","DynamicGrid","TextDisplay","jsxDEV","_jsxDEV","TopAdoptionRates","_s2","_s","$RefreshSig$","gridData","sortByHighestAdoptionRate","data","sort","a","b","adoptionRateA","parseFloat","replace","adoptionRateB","useDataFromApi","apiUrl","setData","fetchData","response","fetch","ok","jsonData","json","error","getHighestAdoptionRate","sortedData","length","topAdoptionRate","setTopAdoptionRate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","titleColor","percentage","size","strokeWidth","circleColor","textColor","emptyColor","textContent","hasHeaders","_c","$RefreshReg$"],"sources":["/Users/lizzybear/adoption-rate-component/src/TopAdoptionRates.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './TopAdoptionRates.scss';\nimport PercentCircle from './PercentCircle';\nimport DynamicGrid from './DynamicGrid';\nimport TextDisplay from './TextDisplay';\nimport './_variables.scss'\n\ninterface AdoptionRate {\n  'Template': string;\n  'Adoption Rate': string;\n  'Total Users': string;\n  'Adopted count': string;\n  'Growth Rate': string;\n}\n\nfunction TopAdoptionRates() {\n\n    // sample data\n  const gridData = [\n    { 'Template': 'fly-docker-image', 'Adoption Rate': '80%', 'Total Users': '200', 'Adopted count': '160', 'Growth Rate': '5%' },\n    { 'Template': 'Develop in Docker', 'Adoption Rate': '50%', 'Total Users': '200', 'Adopted count': '100', 'Growth Rate': '65%' },\n    { 'Template': 'Develop in Docker-2', 'Adoption Rate': '30%', 'Total Users': '200', 'Adopted count': '60', 'Growth Rate': '5%' }\n  ];\n\n    // sort data in descending order (highest first)\n    const sortByHighestAdoptionRate = (data: AdoptionRate[]): AdoptionRate[] => {\n\n      return data.sort((a, b) => {\n        // Parse the Adoption Rate percentage and remove the '%' sign\n        const adoptionRateA = parseFloat(a['Adoption Rate'].replace('%', ''));\n        const adoptionRateB = parseFloat(b['Adoption Rate'].replace('%', ''));\n    \n        return adoptionRateB - adoptionRateA;\n      });\n    };\n\n\n  const useDataFromApi = (apiUrl: string) => {\n    const [data, setData] = useState<AdoptionRate[]>([]);\n  \n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const response = await fetch(apiUrl);\n          if (response.ok) {\n            const jsonData = await response.json();\n            setData(jsonData);\n          } else {\n            // If API call fails, use sample data as fallback\n            setData(gridData);\n          }\n        } catch (error) {\n          // If API call fails, use sample data as fallback\n          setData(gridData);\n        }\n      };\n  \n      fetchData();\n    }, [apiUrl]);\n  \n    return data;\n  };\n\n  const getHighestAdoptionRate = (data: AdoptionRate[]): AdoptionRate | string => {\n    const sortedData = sortByHighestAdoptionRate(data);\n  \n    if (sortedData.length > 0) {\n      // Return the first object in the sorted array (highest adoption rate)\n      return sortedData[0];\n    }\n    \n    return 'No Data';\n  };\n\n  const [data, setData] = useState(gridData);\n  const [topAdoptionRate, setTopAdoptionRate] = useState(getHighestAdoptionRate(data));\n\n  return (\n    <div className=\"top-adoption-rates\">\n      <div className={\"title\"}>\n        <h4>Top Template Adoption Rates</h4>\n      </div>\n      <div className={\"top-adoption-percent\"}>\n        <PercentCircle\n          title={\"Adoption Rate\"}\n          titleColor={'#b4bfd5'}\n          percentage={topAdoptionRate}\n          size={150}\n          strokeWidth={10}\n          circleColor={\"#305bf5\"}\n          textColor={\"#fff\"}\n          emptyColor={\"#1d2435\"}\n        />\n        <TextDisplay title={\"Most Adopted Template\"} textContent={\"fly-docker-imagea\"} /> \n        <DynamicGrid data={gridData} hasHeaders={false}/>\n        </div>\n        <DynamicGrid data={gridData} hasHeaders/>            \n\n    </div>\n  );\n}\n\nexport default TopAdoptionRates;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAO,yBAAyB;AAChC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAU1B,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAExB;EACF,MAAMC,QAAQ,GAAG,CACf;IAAE,UAAU,EAAE,kBAAkB;IAAE,eAAe,EAAE,KAAK;IAAE,aAAa,EAAE,KAAK;IAAE,eAAe,EAAE,KAAK;IAAE,aAAa,EAAE;EAAK,CAAC,EAC7H;IAAE,UAAU,EAAE,mBAAmB;IAAE,eAAe,EAAE,KAAK;IAAE,aAAa,EAAE,KAAK;IAAE,eAAe,EAAE,KAAK;IAAE,aAAa,EAAE;EAAM,CAAC,EAC/H;IAAE,UAAU,EAAE,qBAAqB;IAAE,eAAe,EAAE,KAAK;IAAE,aAAa,EAAE,KAAK;IAAE,eAAe,EAAE,IAAI;IAAE,aAAa,EAAE;EAAK,CAAC,CAChI;;EAEC;EACA,MAAMC,yBAAyB,GAAIC,IAAoB,IAAqB;IAE1E,OAAOA,IAAI,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACzB;MACA,MAAMC,aAAa,GAAGC,UAAU,CAACH,CAAC,CAAC,eAAe,CAAC,CAACI,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;MACrE,MAAMC,aAAa,GAAGF,UAAU,CAACF,CAAC,CAAC,eAAe,CAAC,CAACG,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;MAErE,OAAOC,aAAa,GAAGH,aAAa;IACtC,CAAC,CAAC;EACJ,CAAC;EAGH,MAAMI,cAAc,GAAIC,MAAc,IAAK;IAAAb,EAAA;IACzC,MAAM,CAACI,IAAI,EAAEU,OAAO,CAAC,GAAGvB,QAAQ,CAAiB,EAAE,CAAC;IAEpDC,SAAS,CAAC,MAAM;MACd,MAAMuB,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC5B,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,MAAM,CAAC;UACpC,IAAIG,QAAQ,CAACE,EAAE,EAAE;YACf,MAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;YACtCN,OAAO,CAACK,QAAQ,CAAC;UACnB,CAAC,MAAM;YACL;YACAL,OAAO,CAACZ,QAAQ,CAAC;UACnB;QACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;UACd;UACAP,OAAO,CAACZ,QAAQ,CAAC;QACnB;MACF,CAAC;MAEDa,SAAS,CAAC,CAAC;IACb,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;IAEZ,OAAOT,IAAI;EACb,CAAC;EAACJ,EAAA,CAxBIY,cAAc;EA0BpB,MAAMU,sBAAsB,GAAIlB,IAAoB,IAA4B;IAC9E,MAAMmB,UAAU,GAAGpB,yBAAyB,CAACC,IAAI,CAAC;IAElD,IAAImB,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;MACzB;MACA,OAAOD,UAAU,CAAC,CAAC,CAAC;IACtB;IAEA,OAAO,SAAS;EAClB,CAAC;EAED,MAAM,CAACnB,IAAI,EAAEU,OAAO,CAAC,GAAGvB,QAAQ,CAACW,QAAQ,CAAC;EAC1C,MAAM,CAACuB,eAAe,EAAEC,kBAAkB,CAAC,GAAGnC,QAAQ,CAAC+B,sBAAsB,CAAClB,IAAI,CAAC,CAAC;EAEpF,oBACEP,OAAA;IAAK8B,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjC/B,OAAA;MAAK8B,SAAS,EAAE,OAAQ;MAAAC,QAAA,eACtB/B,OAAA;QAAA+B,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACNnC,OAAA;MAAK8B,SAAS,EAAE,sBAAuB;MAAAC,QAAA,gBACrC/B,OAAA,CAACJ,aAAa;QACZwC,KAAK,EAAE,eAAgB;QACvBC,UAAU,EAAE,SAAU;QACtBC,UAAU,EAAEV,eAAgB;QAC5BW,IAAI,EAAE,GAAI;QACVC,WAAW,EAAE,EAAG;QAChBC,WAAW,EAAE,SAAU;QACvBC,SAAS,EAAE,MAAO;QAClBC,UAAU,EAAE;MAAU;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACFnC,OAAA,CAACF,WAAW;QAACsC,KAAK,EAAE,uBAAwB;QAACQ,WAAW,EAAE;MAAoB;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjFnC,OAAA,CAACH,WAAW;QAACU,IAAI,EAAEF,QAAS;QAACwC,UAAU,EAAE;MAAM;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACNnC,OAAA,CAACH,WAAW;MAACU,IAAI,EAAEF,QAAS;MAACwC,UAAU;IAAA;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExC,CAAC;AAEV;AAACjC,GAAA,CArFQD,gBAAgB;AAAA6C,EAAA,GAAhB7C,gBAAgB;AAuFzB,eAAeA,gBAAgB;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}