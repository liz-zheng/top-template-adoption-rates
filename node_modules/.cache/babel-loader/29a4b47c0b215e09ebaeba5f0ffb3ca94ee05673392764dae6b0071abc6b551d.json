{"ast":null,"code":"var _jsxFileName = \"/Users/lizzybear/adoption-rate-component/src/GridComponent.tsx\";\nimport React from 'react';\nimport './DynamicGrid.scss'; // Assuming you have a Sass file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicGrid = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dynamic-grid\",\n    children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid-row${rowIndex === 0 ? ' header' : ''}`,\n      children: rowIndex === 0 ? /* Render the headings for the first row */\n      data.map((cell, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-heading\",\n        children: cell.heading\n      }, columnIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this)) :\n      /*#__PURE__*/\n      /* Render the content for subsequent rows */\n      _jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-heading\",\n          children: row.heading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-content\",\n          children: row.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = DynamicGrid;\nexport default DynamicGrid;\nvar _c;\n$RefreshReg$(_c, \"DynamicGrid\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DynamicGrid","data","className","children","map","row","rowIndex","cell","columnIndex","heading","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","content","_c","$RefreshReg$"],"sources":["/Users/lizzybear/adoption-rate-component/src/GridComponent.tsx"],"sourcesContent":["import React from 'react';\nimport './DynamicGrid.scss'; // Assuming you have a Sass file for styling\n\ninterface GridData {\n  heading: string;\n  content: string;\n}\n\ninterface DynamicGridProps {\n  data: GridData[];\n}\n\nconst DynamicGrid: React.FC<DynamicGridProps> = ({ data }) => {\n  return (\n    <div className=\"dynamic-grid\">\n      {data.map((row, rowIndex) => (\n        <div key={rowIndex} className={`grid-row${rowIndex === 0 ? ' header' : ''}`}>\n          {rowIndex === 0 ? (\n            /* Render the headings for the first row */\n            data.map((cell, columnIndex) => (\n              <div key={columnIndex} className=\"grid-heading\">\n                {cell.heading}\n              </div>\n            ))\n          ) : (\n            /* Render the content for subsequent rows */\n            <React.Fragment>\n              <div className=\"grid-heading\">{row.heading}</div>\n              <div className=\"grid-content\">{row.content}</div>\n            </React.Fragment>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default DynamicGrid;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAW7B,MAAMC,WAAuC,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC5D,oBACEF,OAAA;IAAKG,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BF,IAAI,CAACG,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBACtBP,OAAA;MAAoBG,SAAS,EAAG,WAAUI,QAAQ,KAAK,CAAC,GAAG,SAAS,GAAG,EAAG,EAAE;MAAAH,QAAA,EACzEG,QAAQ,KAAK,CAAC,GACb;MACAL,IAAI,CAACG,GAAG,CAAC,CAACG,IAAI,EAAEC,WAAW,kBACzBT,OAAA;QAAuBG,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC5CI,IAAI,CAACE;MAAO,GADLD,WAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACN,CAAC;MAAA;MAEF;MACAd,OAAA,CAACF,KAAK,CAACiB,QAAQ;QAAAX,QAAA,gBACbJ,OAAA;UAAKG,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEE,GAAG,CAACI;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjDd,OAAA;UAAKG,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEE,GAAG,CAACU;QAAO;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IACjB,GAdOP,QAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAeb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACG,EAAA,GAvBIhB,WAAuC;AAyB7C,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}