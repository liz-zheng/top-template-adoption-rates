{"ast":null,"code":"var _jsxFileName = \"/Users/lizzybear/adoption-rate-component/src/TopAdoptionRates.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport './TopAdoptionRates.scss';\nimport PercentCircle from './PercentCircle';\nimport DynamicGrid from './DynamicGrid';\nimport TextDisplay from './TextDisplay';\nimport './_variables.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopAdoptionRates() {\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  // sample data\n  const sampleData = [{\n    'Template': 'Develop in Docker',\n    'Total Users': '200',\n    'Adopted count': '100',\n    'Growth Rate': '65%'\n  }, {\n    'Template': 'fly-docker-image',\n    'Total Users': '200',\n    'Adopted count': '160',\n    'Growth Rate': '5%'\n  }, {\n    'Template': 'Develop in Docker-2',\n    'Total Users': '200',\n    'Adopted count': '60',\n    'Growth Rate': '5%'\n  }];\n  const useDataFromApi = apiUrl => {\n    _s();\n    const [data, setData] = useState([]);\n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const response = await fetch(apiUrl);\n          if (response.ok) {\n            const jsonData = await response.json();\n            setData(jsonData);\n          } else {\n            // If API call fails, use sample data as fallback\n            setData(sampleData);\n          }\n        } catch (error) {\n          // If API call fails, use sample data as fallback\n          setData(sampleData);\n        }\n      };\n      fetchData();\n    }, [apiUrl]);\n    return data;\n  };\n  _s(useDataFromApi, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n  const calculateAdoptionRate = (totalUsers, adoptionCount) => {\n    return adoptionCount / totalUsers * 100;\n  };\n\n  // sort data in descending order (highest first)\n  const calculateRatesAndSort = data => {\n    _s2();\n    const dataWithAdoptionRate = data.map(item => {\n      const totalUsers = parseFloat(item['Total Users']);\n      const adoptionCount = parseFloat(item['Adopted count']);\n      return {\n        ...item,\n        AdoptionRate: calculateAdoptionRate(totalUsers, adoptionCount)\n      };\n    });\n    const [sortedAdoptionData, setSortedAdoptionData] = useState(calculateRatesAndSort(sampleData));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-adoption-rates\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Top Template Adoption Rates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-adoption-percent\",\n        children: [/*#__PURE__*/_jsxDEV(PercentCircle, {\n          title: \"Adoption Rate\",\n          titleColor: '#b4bfd5',\n          percentage: sortedAdoptionData.length > 0 ? 0 : 0,\n          size: 150,\n          strokeWidth: 10,\n          circleColor: \"#305bf5\",\n          textColor: \"#fff\",\n          emptyColor: \"#1d2435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TextDisplay, {\n          title: \"Most Adopted Template\",\n          textContent: \"fly-docker-imagea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DynamicGrid, {\n          data: sortedAdoptionData,\n          hasHeaders: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DynamicGrid, {\n        data: sortedAdoptionData,\n        hasHeaders: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(calculateRatesAndSort, \"pihJoYQoIRJitWhuhL+XSy29VRo=\");\n}\n_c = TopAdoptionRates;\nexport default TopAdoptionRates;\nvar _c;\n$RefreshReg$(_c, \"TopAdoptionRates\");","map":{"version":3,"names":["React","useState","useEffect","PercentCircle","DynamicGrid","TextDisplay","jsxDEV","_jsxDEV","TopAdoptionRates","_s","$RefreshSig$","_s2","sampleData","useDataFromApi","apiUrl","data","setData","fetchData","response","fetch","ok","jsonData","json","error","calculateAdoptionRate","totalUsers","adoptionCount","calculateRatesAndSort","dataWithAdoptionRate","map","item","parseFloat","AdoptionRate","sortedAdoptionData","setSortedAdoptionData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","titleColor","percentage","length","size","strokeWidth","circleColor","textColor","emptyColor","textContent","hasHeaders","_c","$RefreshReg$"],"sources":["/Users/lizzybear/adoption-rate-component/src/TopAdoptionRates.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './TopAdoptionRates.scss';\nimport PercentCircle from './PercentCircle';\nimport DynamicGrid from './DynamicGrid';\nimport TextDisplay from './TextDisplay';\nimport './_variables.scss'\n\ninterface AdoptionRate {\n  'Template': string;\n  'Adoption Rate': string;\n  'Total Users': string;\n  'Adopted count': string;\n  'Growth Rate': string;\n}\n\nfunction TopAdoptionRates() {\n\n    // sample data\n  const sampleData = [\n    { 'Template': 'Develop in Docker', 'Total Users': '200', 'Adopted count': '100', 'Growth Rate': '65%' },\n    { 'Template': 'fly-docker-image', 'Total Users': '200', 'Adopted count': '160', 'Growth Rate': '5%' },\n    { 'Template': 'Develop in Docker-2', 'Total Users': '200', 'Adopted count': '60', 'Growth Rate': '5%' }\n  ];\n\n  const useDataFromApi = (apiUrl: string) => {\n    const [data, setData] = useState<any[]>([]);\n  \n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const response = await fetch(apiUrl);\n          if (response.ok) {\n            const jsonData = await response.json();\n            setData(jsonData);\n          } else {\n            // If API call fails, use sample data as fallback\n            setData(sampleData);\n          }\n        } catch (error) {\n          // If API call fails, use sample data as fallback\n          setData(sampleData);\n        }\n      };\n  \n      fetchData();\n    }, [apiUrl]);\n  \n    return data;\n  };\n\n  const calculateAdoptionRate = (totalUsers : number, adoptionCount: number) => {\n    return (adoptionCount / totalUsers) * 100;\n  }\n\n      // sort data in descending order (highest first)\n      const calculateRatesAndSort = (data: any[]): any[] => {\n        const dataWithAdoptionRate = data.map((item) => {\n          const totalUsers = parseFloat(item['Total Users']);\n          const adoptionCount = parseFloat(item['Adopted count']);\n      \n          return {\n            ...item,\n            AdoptionRate: calculateAdoptionRate(totalUsers, adoptionCount),\n          };\n        \n      });\n\n      \n\n  const [sortedAdoptionData, setSortedAdoptionData] = useState(calculateRatesAndSort(sampleData));\n\n  return (\n    <div className=\"top-adoption-rates\">\n      <div className={\"title\"}>\n        <h4>Top Template Adoption Rates</h4>\n      </div>\n      <div className={\"top-adoption-percent\"}>\n      <PercentCircle\n          title={\"Adoption Rate\"}\n          titleColor={'#b4bfd5'}\n          percentage={sortedAdoptionData.length > 0 ? 0 : 0}\n          size={150}\n          strokeWidth={10}\n          circleColor={\"#305bf5\"}\n          textColor={\"#fff\"}\n          emptyColor={\"#1d2435\"}\n        />\n        <TextDisplay title={\"Most Adopted Template\"} textContent={\"fly-docker-imagea\"} /> \n        <DynamicGrid data={sortedAdoptionData} hasHeaders={false}/>\n        </div>\n        <DynamicGrid data={sortedAdoptionData} hasHeaders/>            \n\n    </div>\n  );\n}\n}\n\nexport default TopAdoptionRates;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}