{"ast":null,"code":"var _jsxFileName = \"/Users/lizzybear/adoption-rate-component/src/TopAdoptionRates.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TopAdoptionRates.scss';\nimport PercentCircle from './PercentCircle';\nimport DynamicGrid from './DynamicGrid';\nimport TextDisplay from './TextDisplay';\nimport './_variables.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopAdoptionRates() {\n  _s2();\n  var _s = $RefreshSig$();\n  // sample data\n  const adoptionData = [{\n    'Template': 'Develop in Docker',\n    'Total Users': '200',\n    'Adopted count': '100',\n    'Growth Rate': '65%'\n  }, {\n    'Template': 'fly-docker-image',\n    'Total Users': '200',\n    'Adopted count': '160',\n    'Growth Rate': '5%'\n  }, {\n    'Template': 'Develop in Docker-2',\n    'Total Users': '200',\n    'Adopted count': '60',\n    'Growth Rate': '5%'\n  }];\n  const useDataFromApi = apiUrl => {\n    _s();\n    const [data, setData] = useState([]);\n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const response = await fetch(apiUrl);\n          if (response.ok) {\n            const jsonData = await response.json();\n            setData(jsonData);\n          } else {\n            // If API call fails, use sample data as fallback\n            setData(adoptionData);\n          }\n        } catch (error) {\n          // If API call fails, use sample data as fallback\n          setData(adoptionData);\n        }\n      };\n      fetchData();\n    }, [apiUrl]);\n    return data;\n  };\n\n  // sort data in descending order (highest first)\n  _s(useDataFromApi, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n  const sortByHighestAdoptionRate = data => {\n    return data.sort((a, b) => {\n      // Parse the Adoption Rate percentage and remove the '%' sign\n      const adoptionRateA = parseFloat(a['Adoption Rate'].replace('%', ''));\n      const adoptionRateB = parseFloat(b['Adoption Rate'].replace('%', ''));\n      return adoptionRateB - adoptionRateA;\n    });\n  };\n  const calculateAdoptionRate = (totalUsrs, adoptionCount) => {};\n  const sortedData = sortByHighestAdoptionRate(adoptionData);\n  console.log(sortedData);\n  const [data, setData] = useState(adoptionData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top-adoption-rates\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Top Template Adoption Rates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-adoption-percent\",\n      children: [/*#__PURE__*/_jsxDEV(PercentCircle, {\n        title: \"Adoption Rate\",\n        titleColor: '#b4bfd5',\n        percentage: sortedData.length > 0 ? sortedData[0]['Adoption Rate'] : 0,\n        size: 150,\n        strokeWidth: 10,\n        circleColor: \"#305bf5\",\n        textColor: \"#fff\",\n        emptyColor: \"#1d2435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextDisplay, {\n        title: \"Most Adopted Template\",\n        textContent: \"fly-docker-imagea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DynamicGrid, {\n        data: adoptionData,\n        hasHeaders: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DynamicGrid, {\n      data: adoptionData,\n      hasHeaders: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s2(TopAdoptionRates, \"Ej+XxdOSeu35IfYy4903yvIB49A=\");\n_c = TopAdoptionRates;\nexport default TopAdoptionRates;\nvar _c;\n$RefreshReg$(_c, \"TopAdoptionRates\");","map":{"version":3,"names":["React","useState","useEffect","PercentCircle","DynamicGrid","TextDisplay","jsxDEV","_jsxDEV","TopAdoptionRates","_s2","_s","$RefreshSig$","adoptionData","useDataFromApi","apiUrl","data","setData","fetchData","response","fetch","ok","jsonData","json","error","sortByHighestAdoptionRate","sort","a","b","adoptionRateA","parseFloat","replace","adoptionRateB","calculateAdoptionRate","totalUsrs","adoptionCount","sortedData","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","titleColor","percentage","length","size","strokeWidth","circleColor","textColor","emptyColor","textContent","hasHeaders","_c","$RefreshReg$"],"sources":["/Users/lizzybear/adoption-rate-component/src/TopAdoptionRates.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './TopAdoptionRates.scss';\nimport PercentCircle from './PercentCircle';\nimport DynamicGrid from './DynamicGrid';\nimport TextDisplay from './TextDisplay';\nimport './_variables.scss'\n\ninterface AdoptionRate {\n  'Template': string;\n  // 'Adoption Rate': string;\n  'Total Users': string;\n  'Adopted count': string;\n  'Growth Rate': string;\n}\n\nfunction TopAdoptionRates() {\n\n    // sample data\n  const adoptionData = [\n    { 'Template': 'Develop in Docker', 'Total Users': '200', 'Adopted count': '100', 'Growth Rate': '65%' },\n    { 'Template': 'fly-docker-image', 'Total Users': '200', 'Adopted count': '160', 'Growth Rate': '5%' },\n    { 'Template': 'Develop in Docker-2', 'Total Users': '200', 'Adopted count': '60', 'Growth Rate': '5%' }\n  ];\n\n  const useDataFromApi = (apiUrl: string) => {\n    const [data, setData] = useState<AdoptionRate[]>([]);\n  \n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const response = await fetch(apiUrl);\n          if (response.ok) {\n            const jsonData = await response.json();\n            setData(jsonData);\n          } else {\n            // If API call fails, use sample data as fallback\n            setData(adoptionData);\n          }\n        } catch (error) {\n          // If API call fails, use sample data as fallback\n          setData(adoptionData);\n        }\n      };\n  \n      fetchData();\n    }, [apiUrl]);\n  \n    return data;\n  };\n\n      // sort data in descending order (highest first)\n      const sortByHighestAdoptionRate = (data: AdoptionRate[]): AdoptionRate[] => {\n\n        return data.sort((a, b) => {\n          // Parse the Adoption Rate percentage and remove the '%' sign\n          const adoptionRateA = parseFloat(a['Adoption Rate'].replace('%', ''));\n          const adoptionRateB = parseFloat(b['Adoption Rate'].replace('%', ''));\n      \n          return adoptionRateB - adoptionRateA;\n        });\n      };\n\n      const calculateAdoptionRate = (totalUsrs : number, adoptionCount: number) => {\n\n      }\n\n      \n\n  const sortedData = sortByHighestAdoptionRate(adoptionData);\n  console.log(sortedData);\n\n  const [data, setData] = useState(adoptionData);\n\n  return (\n    <div className=\"top-adoption-rates\">\n      <div className={\"title\"}>\n        <h4>Top Template Adoption Rates</h4>\n      </div>\n      <div className={\"top-adoption-percent\"}>\n      <PercentCircle\n          title={\"Adoption Rate\"}\n          titleColor={'#b4bfd5'}\n          percentage={sortedData.length > 0 ? sortedData[0]['Adoption Rate'] : 0}\n          size={150}\n          strokeWidth={10}\n          circleColor={\"#305bf5\"}\n          textColor={\"#fff\"}\n          emptyColor={\"#1d2435\"}\n        />\n        <TextDisplay title={\"Most Adopted Template\"} textContent={\"fly-docker-imagea\"} /> \n        <DynamicGrid data={adoptionData} hasHeaders={false}/>\n        </div>\n        <DynamicGrid data={adoptionData} hasHeaders/>            \n\n    </div>\n  );\n}\n\nexport default TopAdoptionRates;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}